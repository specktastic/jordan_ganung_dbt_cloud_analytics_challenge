version: 2

sources:
  - name: interview_source
    schema: 'interview_source'
    tables:
      - name: raw_sync_events
        description: "These events are produced by this twilio webhook: https://www.twilio.com/docs/sync/webhooks#map-event-request-parameters, for this exercise we're dealing with updates to what twilio calls map items https://www.twilio.com/docs/sync/webhooks#map-item-events"
        columns:
          - name: "MapSid"
            description: "Uid created by twilio corresponding to the sync map which generated this event"
          - name: "EventType"
            description: "The type of event. The vast majority of the records will be map_item_updated, but map_created, map_item_added are also valid values"
          - name: "DateCreated"
            description: "This is the DateCreated for the event, in the case of this exercise all the events we care about are of EventType map_updated, as shown in this example https://medium.com/dwelo-r-d/synchronicity-with-twilio-sync-4ab8c38e5780#:~:text=on%20permissions%20below.-,A%20Complete%20Example,-Sensor%20State so in this exercise this is always the timestamp Twilio recorded the change to the Sync Map"
          - name: "MapRevision"
            description: "This is an monotonically increasing integer, incremented for each change made to the Map (stored as a HEX string)."
          - name: "ProtocolVersion"
            description: "This is an monotonically increasing integer, incremented for each change made to the Map (stored as a HEX string)."
          - name: "AccountSid"
            description: "Dwelo's Twilio account id. It is 34 characters long, and always starts with the letters AC."
          - name: "ItemKey"
            description: "The key of the item in the map that was added, updated, or removed."
          - name: "EndpointId"
            description: "The server-assigned EndpointId for the Sync client (Hub, cloudapi, etc) that generated the event. EndpointId is generated by Twilio gateways."
          - name: "EventId"
            description: "A sequence number representing the order of occurrence for the map item event."
          - name: "ServiceSid"
            description: "The unique id for the service instance."
          - name: "ItemRevision"
            description: "This is an monotonically increasing integer, incremented for each change made to the Item (stored as a HEX string)."
          - name: "Identity"
            description: "The username/identity of the user that generated the event. Identity is originally supplied in the client authentication token."
          - name: "IsIdentityOnline"
            description: "A boolean that shows if the identity is online or offline when a reachability event is emitted. If set to true, the supplied identity has one or more active connections. Note: the identity could have multiple endpoints connected, represented by different EndpointId's on various transports (i.e. websocket and MQTT)."
          - name: "ListSid"
            description: "The list id. It is 34 characters long, and always starts with the letters ES."
          - name: "ListUniqueName"
            description: "The unique name of the list."
          - name: "MapUniqueName"
            description: "The unique name of the Map. In Dwelo's case for map_item_udpated events this maps to the device_id associated with this map."
          - name: "_source_file"
            description: "The path to the raw s3 object in which this event was stored on it's through the data pipeline."
          - name: "_scheduled_timestamp"
            description: "Timestamp recording the time at which the batch containing this event was loaded to BigQuery"
          - name: "ItemData"
            description: "The data for the MapItem as JSON. Structure varies by ItemKey *** This is where a lot of the useful info is stored for parsing events ***
            *** Part One ***
              -- ItemKey = Command
                uuid: A uuid corresponding to a single command
                timestamp: A timestamp generated by the cloudapi when this command was issued.
                client: The type of client that issued the command. ios/android/googlehome
                user: The user_id of the user that issued the command
                desired_state[]: This is an array for which the first index indicates the command, subsequent indexes depend on that context
                -- First the simple ones:
                  0: One of LockedState/ThermostatMode/ThermostatHeatSetPoint/SwitchState/LockedState/ThermostatCoolSetPoint
                  1: The value to which the 0th index should be set. For example [\"SwitchState\",\"off\"]
                -- PinAssignment has a different pattern
                  0: PinAssignment
                  1: The memory slot on the lock to set the pin on
                  2: The pin to set
                -- As does DimmerState
                  0: DimmerState
                  1: Multilevel On/Multilevel Off
                  2: The level to set the dimmer to if any
              -- ItemKey = CommandActive
                uuid: The uuid to which this CommandActive update corresponds.
                timestamp: A timestamp generated by the hub when it picked this command off the MQTT stream
                node_id: The node id of the device to which dispatch was planned on the hub
              -- ItemKey = CommandResult
                uuid: The uuid to which this CommandResult update corresponds.
                timestamp: A timestamp generated by the hub when it dispatched this command over zwave
                node_id: The node id on the hub of the device to which this command was dispatched
                result: A boolean true/false indicating whether the hub successfully dispatched this command to the device
                failure_string: An optional string providing additional troubleshooting information in the case of the result = false

            *** Part Three ***
              All these readings have a uuid field (within ItemData) issued by the hub when the reading is generated which can be useful for deduping readings
              -- ItemKey = ThermostatOperatingState
                state: The state of the thermostat Heat/Heat2/Idle
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              -- ItemKey = ThermostatCoolSetpoint
                state.value: Integer or float representing the cool setpoint of the thermostat
                state.unit: F or C indicating whether the units are being reported in Fahrenheit or Celsius
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              -- ItemKey = ThermostatHeatSetpoint
                state.value: Integer or float representing the heat setpoint of the thermostat
                state.unit: F or C indicating whehter the units are being reported in Fahrenheit or Celsius
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              -- ItemKey = ThermostatMode
                state: The mode of the thermostat Off/Cool/Heat/Auto
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              -- ItemKey = Switch
                state.value: The state of the switch; On or Off
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              -- ItemKey = DoorLocked
                state: A boolean string where true indicates locked
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              -- ItemKey = Dimmer
                state.value: The state of the switch; On or Off
                state.percent: An integer value provided when switch is On indicating the percentage of the dimmer level
                timestamp: A timestamp generated by the hub when it received this reading over zwave
              "

      - name: raw_users
        columns:
          - name: "uid"
          - name: "username"
          - name: "dateRegistered"
          - name: "last_modified"
models:
  - name: stg_commands
    description: "Commands"
    columns:
      - name: command_uuid
        description: "A unique identifier of a command. The primary key for this table"
        tests:
          - not_null
          - unique
      - name: command_client
        description: "The type of client that issued this command"
        tests:
          - exists
      - name: thermostat_heat_set_point
        description: "The Heat Set Point specified by this command for the targeted thermostat. Provided as an integer or float value indicating the Set Point in degrees-F vs. C is not provided"
        tests:
          - exists
      - name: thermostat_cool_set_point
        description: "The Cool Set Point specified by this command for the targeted thermostat Provided as an integer or float value indicating the Set Point in degrees-F vs. C is not provided"
        tests:
          - exists
      - name: thermostat_mode
        description: "The Mode (Off/Cool/Heat/Auto) specified by this command for the targeted thermostat"
        tests:
          - exists
      - name: slot
        description: "The Slot on the lock under which the `Pin` (used to open the lock) is stored"
        tests:
          - exists
      - name: pin
        description: "The Pin to be stored in the provided Slot"
        tests:
          - exists
      - name: switch_state
        description: "The Switch State (on/off) specified by this command for the targeted light switch"
        tests:
          - exists
      - name: lock_state
        description: "The Lock State (locked/unlocked) specified by this command for the targeted door lock"
        tests:
          - exists
      - name: user_id
        description: "The user_id of the user that issued this command"
        tests:
          - exists
      - name: update_timestamp
        description: "Timestamp from Twilio recording when the device map was updated by the hub or the cloud, drawn from the DateCreated field of raw_sync_events"
        tests:
          - not_null
      - name: event_timestamp
        description: "Timestamp generated at the client for this event"
        tests:
          - exists
      - name: device_id
        description: "The device_id of the targeted device"
        tests:
          - not_null
      - name: _raw_command_desired_state
        description: "The raw JSON of the command"
        tests:
          - not_null
      - name: _uid
        description: "global uid for sync map updates"
        tests:
          - exists
      - name: _source_file
        description: "The source file that this update was in on it's way to our data warehouse"
        tests:
          - exists
      - name: dimmer_state
        description: "the dimmer state specified by the command"
        tests:
          - exists
      - name: dimmer_percent
        description: "the dimmer state specified by the commandd"
        tests:
          - exists
  - name: stg_command_actives
    description: "CommandActive responses from hubs"
    columns:
      - name: command_uuid
        description: "A unique identifier of a command. The primary key for this table"
        tests:
          - not_null
          - unique
      - name: command_node_id
        description: "The node id the command was dispatched to on the hub"
        tests:
          - exists
      - name: update_timestamp
        description: "Timestamp from Twilio recording when the device map was updated by the hub or the cloud, drawn from the DateCreated field of raw_sync_events"
        tests:
          - not_null
      - name: event_timestamp
        description: "Timestamp produced by the hub when the hub picked up the command from Twilio Sync (MQTT)"
        tests:
          - exists
      - name: device_id
        description: "The device_id of the targeted device"
      - name: _source_file
        description: "The source file that this update was in on it's way to our data warehouse"
  - name: stg_command_results
    description: "CommandResult responses from hubs"
    columns:
      - name: command_uuid
        description: "A unique identifier of a command. The primary key for this table"
        tests:
          - not_null
          - unique
      - name: is_hub_success
        description: "A boolean value with is True when the $.result field from a CommandResult contains 'success' or 'true'"
        tests:
          - not_null
      - name: command_failure_string
        description: "An optional string provided by the hub when is_hub_success is false describing additional info about the failure"
      - name: command_node_id
        description: "The node id on the hub to which the command was dispatched"
      - name: update_timestamp
        description: "Timestamp from Twilio recording when the device map was updated by the hub or the cloud, drawn from the DateCreated field of raw_sync_events"
        tests:
          - not_null
      - name: event_timestamp
        description: "Timestamp written by the hub after dispatch over zwave was attempted for this command"
        tests:
          - exists
      - name: device_id
        description: "The device_id of the targeted device"
        tests:
          - exists
      - name: _source_file
        description: "The source file that this update was in on it's way to our data warehouse"
        tests:
          - exists
  - name: stg_users
    description: "Users"
    columns:
      - name: user_id
        description: "The user id"
        tests:
          - not_null
          - unique
      - name: username
        description: "The user's username"
        tests:
          - not_null
          - unique
      - name: date_registered
        description: "A timestamp when a user first registered an account"
        tests:
          - not_null
      - name: last_modified
        description: "A timestamp when the user record was last modified"
        tests:
          - not_null

  - name: stg_event_sensor_readings
    description: "Sensor readings from raw_sync_events that currently contains readings from item_key in ('Humidity', 'Temperature', 'BatteryLevel')"
    columns: 
      - name: sensor_uuid
        description: "A unique identifier of a sensor message. The primary key for this table"
        tests: 
          - not_null
          - unique
      - name: update_timestamp
        description: "Timestamp from Twilio recording when the device map was updated by the hub or the cloud, drawn from the DateCreated field of raw_sync_events"
        tests: 
          - not_null
      - name: event_timestamp
        description: "Timestamp generated at the client for this event"
        tests: 
          - not_null
      - name: device_id
        description: "The device_id of the targeted device"
        tests: 
          - not_null
      - name: item_key
        description: "The key of the item in the map that was added, updated, or removed."
        tests: 
          - not_null
      - name: humidity
        description: "The parsed sensor reading from item data when the the itemkey = 'humidity'"
        tests: 
          - exists
      - name: temperature
        description: "The parsed sensor reading from item data when the the itemkey = 'temperature'"
        tests: 
          - exists
      - name: temp_unit_of_measure
        description: "The parsed temperature unit of measure from item data when the the itemkey = 'temperature'"
        tests: 
          - exists
      - name: temp_raw
        description: "The combined temperature and unit of measure pared from itemdata when the the itemkey = 'temperature'"
        tests: 
          - exists
      - name: battery_level
        description: "The parsed battery level from item data when the the itemkey = 'batterylevel'"
        tests: 
          - exists 
      - name: thermostat_operating_state
        description: "The parsed thermostat_operating_state from item data when the the itemkey = 'thermostat_operating_state'"
        tests: 
          - exists
      - name: thermostat_cool_setpoint_value
        description: "The parsed thermostat_cool_setpoint_value from item data when the the itemkey = 'thermostat_cool_setpoint_value'"
        tests: 
          - exists
      - name: thermostat_cool_setpoint_unit
        description: "The parsed thermostat_cool_setpoint_unit from item data when the the itemkey = 'thermostat_cool_setpoint_unit'"
        tests: 
          - exists
      - name: thermostat_cool_setpoint_raw
        description: "The parsed thermostat_cool_setpoint_raw from item data when the the itemkey = 'thermostat_cool_setpoint_raw'"
        tests: 
          - exists
      - name: thermostat_heat_setpoint_value
        description: "The parsed thermostat_heat_setpoint_value from item data when the the itemkey = 'thermostat_heat_setpoint_value'"
        tests: 
          - exists
      - name: thermostat_heat_setpoint_unit
        description: "The parsed thermostat_heat_setpoint_unit from item data when the the itemkey = 'thermostat_heat_setpoint_unit'"
        tests: 
          - exists
      - name: thermostat_heat_setpoint_raw
        description: "The parsed thermostat_heat_setpoint_raw from item data when the the itemkey = 'thermostat_heat_setpoint_raw'"
        tests: 
          - exists
      - name: thermostat_mode_sensor
        description: "The parsed thermostat_mode_sensor from item data when the the itemkey = 'thermostat_mode_sensor'"
        tests: 
          - exists
      - name: switch
        description: "The parsed switch status from item data when the the itemkey = 'switch'"
        tests: 
          - exists
      - name: door_locked
        description: "The parsed door_locked status from item data when the the itemkey = 'door_locked'"
        tests: 
          - exists
      - name: dimmer_switch
        description: "The parsed dimmer_switch status from item data when the the itemkey = 'dimmer_switch'"
        tests: 
          - exists
      - name: dimmer_percent_reading 
        description: "The parsed dimmer_percent from item data when the the itemkey = 'dimmer_percent'"
        tests: 
          - exists


